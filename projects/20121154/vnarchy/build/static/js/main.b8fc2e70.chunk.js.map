{"version":3,"sources":["logo.svg","firebase.js","Users.js","Add.js","Recommend.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","db","firestore","auth","provider","GoogleAuthProvider","Users","_this$props","this","props","userNum","plusUser","minusUser","q","text","size","ments","react_default","a","createElement","Segment","style","justifyContent","alignItems","textAlign","Header","marginTop","marginBottom","Button","Group","icon","disabled","onClick","Or","length","Component","Add","state","name","minPlayer","maxPlayer","difficulty","friendly","ruleTime","playTime","attachHandler","e","d","_this","setState","Object","defineProperty","value","save","collection","add","then","doc","_this$state","Form","Input","type","onChange","Divider","Recommend","games","_this2","get","_ref","asyncToGenerator","regenerator_default","mark","_callee","qs","wrap","_context","prev","next","console","log","docs","abrupt","Promise","all","_","map","data","stop","_x","apply","arguments","game","userments","customer","brain","time","App","step","users","user","Menu","Item","position","signOut","signInWithPopup","result","currentUser","Add_Add","Container","Users_Users","Recommend_Recommend","labelPosition","content","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b8fc2e70.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import firebase from 'firebase'\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyAALohDwpQIG2cpU7D-Uej7RGcfTjKSGsQ\",\r\n    authDomain: \"boardgame-7e9ab.firebaseapp.com\",\r\n    databaseURL: \"https://boardgame-7e9ab.firebaseio.com\",\r\n    projectId: \"boardgame-7e9ab\",\r\n    storageBucket: \"\",\r\n    messagingSenderId: \"899642634770\",\r\n    appId: \"1:899642634770:web:e7f5d586a64a11c4\"\r\n  };\r\n  // Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const db = firebase.firestore()\r\n\r\nexport const auth = firebase.auth()\r\nexport const provider = new firebase.auth.GoogleAuthProvider();","import React, { Component } from \"react\";\r\nimport {\r\n  Menu,\r\n  Container,\r\n  Icon,\r\n  Form,\r\n  Input,\r\n  Header,\r\n  Button,\r\n  Label,\r\n  Segment\r\n} from \"semantic-ui-react\";\r\n\r\n\r\nexport default class Users extends Component {\r\n  \r\n  render() {\r\n    const {userNum,plusUser,minusUser,q,text,size, ments} = this.props\r\n    return (\r\n      <Segment\r\n        style={{ justifyContent: \"center\", alignItems: \"center\" }}\r\n        textAlign=\"center\"\r\n      >\r\n        <Header style={{ marginTop: \"100px\", marginBottom: \"100px\" }}>\r\n          {q}\r\n        </Header>\r\n        <Button.Group size={size}>\r\n          <Button icon=\"angle left\" disabled={userNum <2} onClick={minusUser} />\r\n          <Button.Or text={text[userNum]} />\r\n          <Button icon=\"angle right\" disabled={userNum >= text.length - 1} onClick={plusUser}/>\r\n        </Button.Group>\r\n        <Header style={{ marginTop: \"100px\", marginBottom: \"30px\" }}>\r\n          {ments[userNum]}\r\n        </Header>\r\n      </Segment>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Segment, Input, Form, Divider, Button } from \"semantic-ui-react\";\r\nimport { db } from \"./firebase\";\r\n\r\nexport default class Add extends Component {\r\n  state = {\r\n    name: \"\",\r\n    minPlayer: 0,\r\n    maxPlayer: 0,\r\n    difficulty: 1,\r\n    friendly: 1,\r\n    ruleTime: 0,\r\n    playTime: 0\r\n  };\r\n  attachHandler = name => (e, d) => this.setState({ [name]: d.value });\r\n  save = () =>\r\n    db\r\n      .collection(\"games\")\r\n      .add(this.state)\r\n      .then(doc =>\r\n        this.setState({\r\n          name: \"\",\r\n          minPlayer: 0,\r\n          maxPlayer: 0,\r\n          difficulty: 1,\r\n          friendly: 1,\r\n          ruleTime: 0,\r\n          playTime: 0\r\n        })\r\n      );\r\n\r\n  render() {\r\n    const {\r\n      minPlayer,\r\n      maxPlayer,\r\n      difficulty,\r\n      friendly,\r\n      ruleTime,\r\n      playTime\r\n    } = this.state;\r\n\r\n    return (\r\n      <Segment style={{ justifyContent: \"center\", alignItems: \"center\" }}>\r\n        <Form\r\n        >\r\n          게임 이름:{\" \"}\r\n          <Input\r\n            type=\"text\"\r\n            value={this.state.name}\r\n            onChange={this.attachHandler(\"name\")}\r\n          />\r\n          <Divider />\r\n          최소 플레이 인원:{\" \"}\r\n          <Input\r\n            type=\"number\"\r\n            value={minPlayer}\r\n            onChange={this.attachHandler(\"minPlayer\")}\r\n          />\r\n          <Divider />\r\n          최대 플레이 인원:{\" \"}\r\n          <Input\r\n            type=\"number\"\r\n            value={maxPlayer}\r\n            onChange={this.attachHandler(\"maxPlayer\")}\r\n          />\r\n          <Divider />\r\n          난이도:{\" \"}\r\n          <Input\r\n            type=\"number\"\r\n            value={difficulty}\r\n            onChange={this.attachHandler(\"difficulty\")}\r\n          />\r\n          <Divider />\r\n          친밀도:{\" \"}\r\n          <Input\r\n            type=\"number\"\r\n            value={friendly}\r\n            onChange={this.attachHandler(\"friendly\")}\r\n          />\r\n          <Divider />\r\n          설명시간:{\" \"}\r\n          <Input\r\n            type=\"number\"\r\n            value={ruleTime}\r\n            onChange={this.attachHandler(\"ruleTime\")}\r\n          />\r\n          <Divider />\r\n          플레이시간:{\" \"}\r\n          <Input\r\n            type=\"number\"\r\n            value={playTime}\r\n            onChange={this.attachHandler(\"playTime\")}\r\n          />\r\n          <Divider />\r\n          <Button onClick={this.save}>저장</Button>\r\n        </Form>\r\n      </Segment>\r\n    );\r\n  }\r\n}\r\n","import React,{Component} from 'react'\r\nimport {Segment, Header} from 'semantic-ui-react'\r\nimport { db } from './firebase'\r\nimport _ from 'lodash'\r\n\r\nexport default class Recommend extends Component {\r\n    state = {\r\n        games : []\r\n    }\r\n    componentDidMount(){\r\n        db.collection(\"games\").get().then(\r\n            async qs =>{\r\n                console.log(qs.docs.length)\r\n                return Promise.all(_.map(qs.docs,doc=>doc.data()))\r\n            }\r\n                \r\n        ).then(games => this.setState({games}))\r\n    }\r\n    render(){\r\n        return(\r\n            <Segment>\r\n                <Header>당신을 위한 추천</Header>\r\n                {\r\n                    this.state.games.map(game => game.name)\r\n                }\r\n            </Segment>\r\n        )\r\n    }\r\n}","import React, { Component } from \"react\";\nimport {\n  Menu,\n  Container,\n  Icon,\n  Form,\n  Input,\n  Header,\n  Button,\n  Label,\n  Segment\n} from \"semantic-ui-react\";\nimport { firebase, auth, provider } from \"./firebase\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Users from \"./Users\";\nimport { thisTypeAnnotation } from \"@babel/types\";\nimport Add from \"./Add\";\nimport Recommend from \"./Recommend\";\n\nvar userments = [\n  ,\n  \"뭐 그럴수도 있죠.\",\n  \"보드게임을 좋아하는 커플이라니 훌륭하군요! 아니라면 굉장히 이상한 취향을 가진 친구사이네요.\",\n  \"3은 굉장히 균형잡힌 숫자에요.\",\n  \"트럼프 카드가 괜히 4문양이 아니랍니다.\",\n  \"서로 물어 뜯고 싸우기에 최고의 숫자네요\"\n];\nvar customer = [\n  ,\n  \"방금만난 사이\",\n  \"처음 보는 사이는 아닌 사이\",\n  \"그래도 나름 자주보는 사이\",\n  \"친구\",\n  \"원수\"\n];\nvar brain = [, \"원숭이\", \"사람\", \"머리가 아픈것을 즐기는 마조히스트\"];\nvar time = [, \"다음 일정전에 간단하게\", \"한두시간?\", \"각잡고 왔다 달리자\"];\nclass App extends Component {\n  componentWillMount() {\n    this.setState({\n      step: 0,\n      users: 1,\n      friendly: 1,\n      brain: 1,\n      time: 1,\n      user: null\n    });\n  }\n  render() {\n    const { step, users } = this.state;\n    return (\n      <div>\n        <Menu>\n          <Menu.Item>BoardGame Picker</Menu.Item>\n          <Menu.Item\n            position=\"right\"\n            onClick={() =>\n              !this.state.user\n                ? auth.signInWithPopup(provider).then(result => {\n                    this.setState({ user: result.user });\n                  })\n                : auth.signOut().then(() => this.setState({ user: null }))\n            }\n          >\n            {auth.currentUser ? \"Sign Out\" : \"Sign In\"}\n          </Menu.Item>\n        </Menu>\n        {\n\n        this.state.user? <Add/> :\n        <Container\n          style={{ justifyContent: \"center\", alignItems: \"center\" }}\n          textAlign=\"center\"\n        >\n          {(() => {\n            switch (step) {\n              case 0:\n                return (\n                  <Users\n                    size=\"massive\"\n                    q=\"몇명이서 함께할까요?\"\n                    text={[, 1, 2, 3, 4, 5]}\n                    ments={userments}\n                    plusUser={() =>\n                      this.setState({ users: this.state.users + 1 })\n                    }\n                    minusUser={() =>\n                      this.setState({ users: this.state.users - 1 })\n                    }\n                    userNum={this.state.users}\n                  />\n                );\n                break;\n              case 1:\n                return (\n                  <Users\n                    size=\"massive\"\n                    q=\"서로 얼마나 친하신가요?\"\n                    text={[, 1, 2, 3, 4, 5]}\n                    ments={customer}\n                    plusUser={() =>\n                      this.setState({ friendly: this.state.friendly + 1 })\n                    }\n                    minusUser={() =>\n                      this.setState({ friendly: this.state.friendly - 1 })\n                    }\n                    userNum={this.state.friendly}\n                  />\n                );\n                break;\n              case 2:\n                return (\n                  <Users\n                    size=\"massive\"\n                    q=\"당신의 친구의 지능은?\"\n                    text={[, 1, 2, 3]}\n                    ments={brain}\n                    plusUser={() =>\n                      this.setState({ brain: this.state.brain + 1 })\n                    }\n                    minusUser={() =>\n                      this.setState({ brain: this.state.brain - 1 })\n                    }\n                    userNum={this.state.brain}\n                  />\n                );\n                break;\n              case 3:\n                return (\n                  <Users\n                    size=\"massive\"\n                    q=\"얼마나 오래 즐기실 생각이신가요\"\n                    text={[, 1, 2, 3]}\n                    ments={time}\n                    plusUser={() =>\n                      this.setState({ time: this.state.time + 1 })\n                    }\n                    minusUser={() =>\n                      this.setState({ time: this.state.time - 1 })\n                    }\n                    userNum={this.state.time}\n                  />\n                );\n                break;\n              case 4:\n                return(\n                  <Recommend data={this.state}/>\n                )\n            }\n          })()}\n          {\n            step < 4 ? <div>\n              <Button\n            disabled={step < 1}\n            onClick={() => this.setState({ step: step - 1 })}\n            labelPosition=\"left\"\n            icon=\"angle left\"\n            content=\"이전\"\n          />\n          <Button\n            onClick={() => this.setState({ step: step + 1 })}\n            labelPosition=\"right\"\n            icon=\"angle right\"\n            content={step < 3?\"다음\":\"완료\"}\n          />\n            </div>:null\n          }\n          \n        </Container>\n        }\n      </div>\n    );\n  }\n  \n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}